#!/bin/bash

set -e -o pipefail

# Check if docker is available or if the needed binaries are available
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
source $SCRIPT_DIR/check_docker.sh

if [ "$#" -ne 2 ]; then
  echo "Usage: $0 <input.ll> <output.v>" >&2
  exit 1
fi


BAMBU_DEVICE="${BAMBU_DEVICE:-asap7-BC}"
BAMBU_CLOCK_PERIOD="${BAMBU_CLOCK_PERIOD:-5}"
BAMBU_RUN_SIMULATION="${BAMBU_RUN_SIMULATION:-false}"


OUTPUT_DIR=$(pwd)/$(dirname $2)
mkdir -p $OUTPUT_DIR
OUTPUT_NAME=$(basename $2)
OUTPUT_PATH=$OUTPUT_DIR/$OUTPUT_NAME

# set -x

cp $1 $OUTPUT_DIR/input.ll
pushd $OUTPUT_DIR

SIMULATION_ARGS=""
if [ "$BAMBU_RUN_SIMULATION" = "true" ]; then
  TB_SUFFIX="--simulate --simulator=VERILATOR --verilator-parallel"
  # The file forward_kernel_testbench.c is generated by another tool
  # it may be in the current directory or in a relative path from 1 to 3 directories below. Check if we can find it.
  if [ -f "forward_kernel_testbench.c" ]; then
    SIMULATION_ARGS="--generate-tb=forward_kernel_testbench.c $TB_SUFFIX"
  elif [ -f "../forward_kernel_testbench.c" ]; then
    SIMULATION_ARGS="--generate-tb=../forward_kernel_testbench.c $TB_SUFFIX"
  elif [ -f "../../forward_kernel_testbench.c" ]; then
    SIMULATION_ARGS="--generate-tb=../../forward_kernel_testbench.c $TB_SUFFIX"
  elif [ -f "../../../forward_kernel_testbench.c" ]; then
    SIMULATION_ARGS="--generate-tb=../../../forward_kernel_testbench.c $TB_SUFFIX"
  else
    echo "Error: forward_kernel_testbench.c not found in the expected locations."
    exit 1
  fi
fi

$DOCKER_RUN \
bambu -v3 --print-dot \
		-lm --soft-float \
		--compiler=I386_CLANG16  \
		--device=$BAMBU_DEVICE \
		--clock-period=$BAMBU_CLOCK_PERIOD \
		--experimental-setup=BAMBU-BALANCED-MP \
		--channels-number=2 \
		--memory-allocation-policy=ALL_BRAM \
		--disable-function-proxy \
    $SIMULATION_ARGS \
		--top-fname=forward_kernel \
		input.ll 2>&1 | tee bambu-log

cp forward_kernel.v 06_verilog.v

# If simulation was requested, copy results from results.txt to 07_results.txt
if [ "$BAMBU_RUN_SIMULATION" = "true" ]; then
  if [ -f results.txt ]; then
    cp results.txt 07_results.txt
  else
    echo "No results.txt found, skipping copying results."
  fi
fi

# Patch OpenROAD scripts generated by bambu
BAMBUDIR=$OUTPUT_DIR
KERNELNAME=forward_kernel
# If asap7-BC, this removes -BC from the device name leaving just asap7
PLATFORM=${BAMBU_DEVICE%-*}
source ${SCRIPT_DIR}/patch_openroad_synt.sh

popd
  
set +x